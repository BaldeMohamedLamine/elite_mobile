# Generated by Django 5.1.1 on 2025-09-12 11:47

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('orders', '0004_alter_order_delivery_phone_alter_payment_card_brand_and_more'),
        ('products', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('name', models.CharField(help_text='Nom du fournisseur', max_length=200)),
                ('company_name', models.CharField(blank=True, help_text="Nom de l'entreprise", max_length=200)),
                ('contact_person', models.CharField(blank=True, help_text='Personne de contact', max_length=100)),
                ('email', models.EmailField(help_text='Email principal', max_length=254, validators=[django.core.validators.EmailValidator()])),
                ('phone', models.CharField(blank=True, help_text='Téléphone principal', max_length=20)),
                ('website', models.URLField(blank=True, help_text='Site web')),
                ('address_line1', models.CharField(blank=True, max_length=200)),
                ('address_line2', models.CharField(blank=True, max_length=200)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('state_province', models.CharField(blank=True, max_length=100)),
                ('postal_code', models.CharField(blank=True, max_length=20)),
                ('country', models.CharField(default='Guinée', max_length=100)),
                ('tax_id', models.CharField(blank=True, help_text='Numéro de TVA/Impôt', max_length=50)),
                ('business_license', models.CharField(blank=True, help_text='Numéro de licence', max_length=100)),
                ('payment_terms', models.CharField(choices=[('net_15', 'Net 15 jours'), ('net_30', 'Net 30 jours'), ('net_45', 'Net 45 jours'), ('net_60', 'Net 60 jours'), ('prepaid', 'Prépayé'), ('cod', 'Paiement à la livraison')], default='net_30', max_length=20)),
                ('credit_limit', models.DecimalField(decimal_places=2, default=0, help_text='Limite de crédit en GNF', max_digits=12)),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0, help_text='Remise standard en %', max_digits=5)),
                ('status', models.CharField(choices=[('active', 'Actif'), ('inactive', 'Inactif'), ('suspended', 'Suspendu'), ('pending', 'En attente')], default='pending', max_length=20)),
                ('is_verified', models.BooleanField(default=False, help_text='Fournisseur vérifié')),
                ('notes', models.TextField(blank=True, help_text='Notes internes')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_suppliers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DropshipProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('supplier_price', models.DecimalField(decimal_places=2, help_text="Prix d'achat au fournisseur", max_digits=10)),
                ('selling_price', models.DecimalField(decimal_places=2, help_text='Prix de vente au client', max_digits=10)),
                ('margin_percentage', models.DecimalField(decimal_places=2, help_text='Marge en pourcentage', max_digits=5)),
                ('virtual_stock', models.IntegerField(default=0, help_text='Stock virtuel (disponible chez le fournisseur)', validators=[django.core.validators.MinValueValidator(0)])),
                ('min_order_quantity', models.IntegerField(default=1, help_text='Quantité minimum de commande', validators=[django.core.validators.MinValueValidator(1)])),
                ('max_order_quantity', models.IntegerField(default=100, help_text='Quantité maximum de commande', validators=[django.core.validators.MinValueValidator(1)])),
                ('estimated_delivery_days', models.IntegerField(default=7, help_text='Délai de livraison estimé en jours', validators=[django.core.validators.MinValueValidator(1)])),
                ('shipping_cost', models.DecimalField(decimal_places=2, default=0, help_text='Coût de livraison', max_digits=10)),
                ('is_active', models.BooleanField(default=True, help_text='Produit actif pour la vente')),
                ('is_featured', models.BooleanField(default=False, help_text='Produit mis en avant')),
                ('auto_reorder', models.BooleanField(default=False, help_text='Réapprovisionnement automatique')),
                ('reorder_threshold', models.IntegerField(default=5, help_text='Seuil de réapprovisionnement', validators=[django.core.validators.MinValueValidator(0)])),
                ('supplier_sku', models.CharField(blank=True, help_text='SKU du fournisseur', max_length=100)),
                ('supplier_url', models.URLField(blank=True, help_text='URL du produit chez le fournisseur')),
                ('notes', models.TextField(blank=True, help_text='Notes sur ce produit')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_sync_at', models.DateTimeField(blank=True, help_text='Dernière synchronisation avec le fournisseur', null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dropship_suppliers', to='products.product')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dropship_products', to='products.supplier')),
            ],
        ),
        migrations.CreateModel(
            name='SupplierInvoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('invoice_number', models.CharField(help_text='Numéro de facture', max_length=50, unique=True)),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=12)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('paid_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('invoice_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('due_date', models.DateTimeField()),
                ('paid_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('draft', 'Brouillon'), ('sent', 'Envoyée'), ('paid', 'Payée'), ('overdue', 'En retard'), ('cancelled', 'Annulée')], default='draft', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='products.supplier')),
            ],
            options={
                'ordering': ['-invoice_date'],
            },
        ),
        migrations.CreateModel(
            name='SupplierSale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('supplier_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('selling_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('commission_earned', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('confirmed', 'Confirmée'), ('shipped', 'Expédiée'), ('delivered', 'Livrée'), ('cancelled', 'Annulée'), ('refunded', 'Remboursée')], default='pending', max_length=20)),
                ('tracking_number', models.CharField(blank=True, max_length=100)),
                ('estimated_delivery_date', models.DateTimeField(blank=True, null=True)),
                ('actual_delivery_date', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('dropship_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales', to='products.dropshipproduct')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supplier_sales', to='orders.order')),
                ('order_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supplier_sales', to='orders.orderitem')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supplier_sales', to='products.supplier')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SupplierInvoiceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=200)),
                ('quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='products.supplierinvoice')),
                ('supplier_sale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoice_items', to='products.suppliersale')),
            ],
        ),
        migrations.AddIndex(
            model_name='supplier',
            index=models.Index(fields=['status', 'is_verified'], name='products_su_status_0fbd83_idx'),
        ),
        migrations.AddIndex(
            model_name='supplier',
            index=models.Index(fields=['name'], name='products_su_name_452a00_idx'),
        ),
        migrations.AddIndex(
            model_name='supplier',
            index=models.Index(fields=['email'], name='products_su_email_2ace16_idx'),
        ),
        migrations.AddIndex(
            model_name='dropshipproduct',
            index=models.Index(fields=['supplier', 'is_active'], name='products_dr_supplie_b90158_idx'),
        ),
        migrations.AddIndex(
            model_name='dropshipproduct',
            index=models.Index(fields=['product', 'is_active'], name='products_dr_product_fbb5ab_idx'),
        ),
        migrations.AddIndex(
            model_name='dropshipproduct',
            index=models.Index(fields=['virtual_stock'], name='products_dr_virtual_3d9248_idx'),
        ),
        migrations.AddIndex(
            model_name='dropshipproduct',
            index=models.Index(fields=['margin_percentage'], name='products_dr_margin__0ff12d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='dropshipproduct',
            unique_together={('supplier', 'product')},
        ),
        migrations.AddIndex(
            model_name='supplierinvoice',
            index=models.Index(fields=['supplier', 'status'], name='products_su_supplie_1daf22_idx'),
        ),
        migrations.AddIndex(
            model_name='supplierinvoice',
            index=models.Index(fields=['invoice_date'], name='products_su_invoice_9199fc_idx'),
        ),
        migrations.AddIndex(
            model_name='supplierinvoice',
            index=models.Index(fields=['due_date'], name='products_su_due_dat_1e3736_idx'),
        ),
        migrations.AddIndex(
            model_name='suppliersale',
            index=models.Index(fields=['supplier', 'status'], name='products_su_supplie_6797c8_idx'),
        ),
        migrations.AddIndex(
            model_name='suppliersale',
            index=models.Index(fields=['order', 'status'], name='products_su_order_i_a4ba0f_idx'),
        ),
        migrations.AddIndex(
            model_name='suppliersale',
            index=models.Index(fields=['created_at'], name='products_su_created_7fdf14_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='supplierinvoiceitem',
            unique_together={('invoice', 'supplier_sale')},
        ),
    ]
