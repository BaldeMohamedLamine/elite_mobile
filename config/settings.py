"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-your-secret-key-here-change-this-in-production'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    'localhost',
    '127.0.0.1',
    '127.0.0.1:8001',
    'elitemobile.pythonanywhere.com',
    'www.elitemobile.pythonanywhere.com',
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # 'debug_toolbar',  # Temporairement commenté pour résoudre l'erreur ZeroDivisionError
    'tailwind',
    'theme',

    'users',
    'products',
    'orders',
    'manager',
    'corsheaders',  # Pour CORS
    'whitenoise',  # Pour servir les fichiers statiques
]

if DEBUG:
    # Add django_browser_reload only in DEBUG mode
    INSTALLED_APPS += ['django_browser_reload']

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',  # Pour servir les fichiers statiques
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',  # Pour CORS
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # Middlewares de performance (temporairement désactivés pour résoudre les problèmes de session)
    # 'products.cache_middleware.PerformanceMonitoringMiddleware',
    # 'products.cache_middleware.DatabaseQueryCacheMiddleware',
    # 'products.cache_middleware.CacheMiddleware',
    # 'products.cache_middleware.StaticFileCacheMiddleware',
    # 'debug_toolbar.middleware.DebugToolbarMiddleware',  # Temporairement commenté pour résoudre l'erreur ZeroDivisionError
    # Middlewares de sécurité (temporairement désactivés pour le développement)
    # 'orders.middleware.SecurityHeadersMiddleware',
    # 'orders.middleware.RateLimitMiddleware',
    # 'orders.middleware.RequestLoggingMiddleware',
    # 'orders.security_middleware.SecurityEventMiddleware',
    # 'orders.security_middleware.FailedLoginMiddleware',
    # 'orders.security_middleware.SessionSecurityMiddleware',
]

if DEBUG:
    # Add django_browser_reload middleware only in DEBUG mode
    MIDDLEWARE += [
        "django_browser_reload.middleware.BrowserReloadMiddleware",
    ]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates',],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'manager.context_processors.company_settings',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Configuration pour PythonAnywhere (optionnel - base de données MySQL)
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'votre_nom$nom_db',
#         'USER': 'votre_nom',
#         'PASSWORD': 'votre_mot_de_passe',
#         'HOST': 'votre_nom.mysql.pythonanywhere-services.com',
#         'PORT': '3306',
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'fr-fr'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Session Configuration
SESSION_COOKIE_AGE = 1209600  # 2 semaines
SESSION_COOKIE_HTTPONLY = True
SESSION_COOKIE_SECURE = False  # False pour PythonAnywhere gratuit
SESSION_COOKIE_SAMESITE = 'Lax'  # Lax pour PythonAnywhere gratuit
SESSION_SAVE_EVERY_REQUEST = True
SESSION_EXPIRE_AT_BROWSER_CLOSE = False

# CSRF Configuration
CSRF_COOKIE_HTTPONLY = True  # Sécurisé par défaut
CSRF_COOKIE_SECURE = False  # False pour PythonAnywhere gratuit
CSRF_COOKIE_SAMESITE = 'Lax'  # Lax pour PythonAnywhere gratuit
CSRF_USE_SESSIONS = False  # Utilise les cookies par défaut

# Encryption Configuration
ENCRYPTION_KEY = '35KGt3qnoTw5GC4uwpqRwhh-gz9zbzRaSkiqbIKGLqM='

# Email Configuration
# Configuration Email pour la production
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'  # À configurer selon votre fournisseur
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'baldelenz@gmail.com'  # À remplacer par votre email
EMAIL_HOST_PASSWORD = 'ymdd vwyy mtnb pizh'  # À remplacer par votre mot de passe d'application
DEFAULT_FROM_EMAIL = 'noreply@onlineshopgn.com'



# Custom Error Pages (actives en développement et production)
# Note: En mode DEBUG, Django affiche ses propres pages d'erreur détaillées
# Pour tester les pages personnalisées, il faut temporairement mettre DEBUG = False
handler404 = 'theme.views.custom_404'
handler403 = 'theme.views.custom_403'
handler500 = 'theme.views.custom_500'

# Rate Limiting
RATE_LIMIT_MAX_REQUESTS = 100
RATE_LIMIT_TIME_WINDOW = 60  # seconds

# IP Whitelist for Admin (optional)


# Logging Configuration
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': BASE_DIR / 'logs' / 'django.log',
            'formatter': 'verbose',
        },
        'security_file': {
            'level': 'WARNING',
            'class': 'logging.FileHandler',
            'filename': BASE_DIR / 'logs' / 'security.log',
            'formatter': 'verbose',
        },
        'error_file': {
            'level': 'ERROR',
            'class': 'logging.FileHandler',
            'filename': BASE_DIR / 'logs' / 'error.log',
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'INFO',
            'propagate': True,
        },
        'security': {
            'handlers': ['security_file'],
            'level': 'WARNING',
            'propagate': True,
        },
        'django.request': {
            'handlers': ['error_file'],
            'level': 'ERROR',
            'propagate': True,
        },
    },
}


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'
MEDIA_URL = 'media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Configuration des fichiers statiques et médias pour la production
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Cache configuration
if DEBUG:
    # Cache local pour le développement (quand Redis n'est pas disponible)
    CACHES = {
        'default': {
            'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
            'LOCATION': 'unique-snowflake',
            'TIMEOUT': 300,  # 5 minutes par défaut
        },
        'sessions': {
            'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
            'LOCATION': 'session-cache',
            'TIMEOUT': 86400,  # 24 heures
        },
        'search': {
            'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
            'LOCATION': 'search-cache',
            'TIMEOUT': 3600,  # 1 heure
        },
        'analytics': {
            'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
            'LOCATION': 'analytics-cache',
            'TIMEOUT': 1800,  # 30 minutes
        }
    }
else:
    # Cache Redis pour la production
    CACHES = {
        'default': {
            'BACKEND': 'django_redis.cache.RedisCache',
            'LOCATION': 'redis://127.0.0.1:6379/1',
            'OPTIONS': {
                'CLIENT_CLASS': 'django_redis.client.DefaultClient',
                'CONNECTION_POOL_KWARGS': {
                    'max_connections': 100,
                    'retry_on_timeout': True,
                    'socket_keepalive': True,
                    'socket_keepalive_options': {},
                },
                'COMPRESSOR': 'django_redis.compressors.zlib.ZlibCompressor',
                'SERIALIZER': 'django_redis.serializers.json.JSONSerializer',
            },
            'KEY_PREFIX': 'online_shop_prod',
            'TIMEOUT': 300,  # 5 minutes par défaut
        },
        'sessions': {
            'BACKEND': 'django_redis.cache.RedisCache',
            'LOCATION': 'redis://127.0.0.1:6379/2',
            'OPTIONS': {
                'CLIENT_CLASS': 'django_redis.client.DefaultClient',
            },
            'KEY_PREFIX': 'session',
            'TIMEOUT': 86400,  # 24 heures
        },
        'search': {
            'BACKEND': 'django_redis.cache.RedisCache',
            'LOCATION': 'redis://127.0.0.1:6379/3',
            'OPTIONS': {
                'CLIENT_CLASS': 'django_redis.client.DefaultClient',
            },
            'KEY_PREFIX': 'search',
            'TIMEOUT': 3600,  # 1 heure
        },
        'analytics': {
            'BACKEND': 'django_redis.cache.RedisCache',
            'LOCATION': 'redis://127.0.0.1:6379/4',
            'OPTIONS': {
                'CLIENT_CLASS': 'django_redis.client.DefaultClient',
            },
            'KEY_PREFIX': 'analytics',
            'TIMEOUT': 1800,  # 30 minutes
        }
    }

# Session configuration (utilise la base de données pour éviter les problèmes de cache)
SESSION_ENGINE = 'django.contrib.sessions.backends.db'
# SESSION_CACHE_ALIAS = 'sessions'

# CORS configuration
CORS_ALLOWED_ORIGINS = [
    "http://elitemobile.pythonanywhere.com",
    "http://www.elitemobile.pythonanywhere.com",
]

CORS_ALLOW_CREDENTIALS = True

# WhiteNoise configuration
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Performance settings
CONN_MAX_AGE = 300  # 5 minutes - Connexions de base de données persistantes

# Configuration de rate limiting
RATELIMIT_ENABLE = True
RATELIMIT_USE_CACHE = 'default'

# Configuration de monitoring
ENABLE_MONITORING = True
MONITORING_API_KEY = None  # À configurer si nécessaire

# Configuration de backup
BACKUP_ENABLED = True
BACKUP_SCHEDULE = '0 2 * * *'  # Tous les jours à 2h du matin
BACKUP_RETENTION_DAYS = 30

# Configuration de sécurité supplémentaire - Désactivée
# SECURE_CROSS_ORIGIN_OPENER_POLICY = None  # Déjà désactivé plus haut
# SECURE_FRAME_DENY = False  # Déjà désactivé plus haut

# Configuration de performance pour la production
USE_TZ = True
USE_I18N = True
USE_L10N = True

# Configuration de session pour la production
SESSION_ENGINE = 'django.contrib.sessions.backends.cached_db'
SESSION_CACHE_ALIAS = 'sessions'

AUTH_USER_MODEL = 'users.User'

STATICFILES_DIRS = [
    BASE_DIR / 'users/static',
]

MEDIAFILES_DIRS = [
     BASE_DIR / 'media',
]

INTERNAL_IPS = [
    # ...
    "127.0.0.1",
    # ...
]

# Configuration email supprimée - utilise celle du haut

DOMAIN_URL = 'localhost:8000'

MESSAGE_STORAGE = "django.contrib.messages.storage.cookie.CookieStorage"

AUTHENTICATION_BACKENDS = [
    'users.custom_authenticate.CustomAuthentication',
    'django.contrib.auth.backends.ModelBackend',
]

LOGIN_URL = '/users/login/'
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'

FILE_UPLOAD_MAX_MEMORY_SIZE = 1024*5 # 5Mo

# Tailwind CSS Configuration
TAILWIND_APP_NAME = 'theme'

# NPM Configuration for Windows
NPM_BIN_PATH = 'npm.cmd'

INTERNAL_IPS = [
    "127.0.0.1",
]
